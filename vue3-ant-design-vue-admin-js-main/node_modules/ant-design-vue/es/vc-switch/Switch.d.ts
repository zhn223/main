declare var _default: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    } & {
        default: string;
    };
    disabled: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    };
    checkedChildren: import("vue-types").VueTypeValidableDef<any>;
    unCheckedChildren: import("vue-types").VueTypeValidableDef<any>;
    tabindex: import("vue-types").VueTypeDef<string | number>;
    checked: import("vue-types").VueTypeValidableDef<boolean>;
    defaultChecked: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    };
    autofocus: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    };
    loadingIcon: import("vue-types").VueTypeValidableDef<any>;
}, any, {
    stateChecked: boolean;
}, {}, {
    saveRef(c: any): void;
    setChecked(checked: any, e: any): void;
    handleClick(e: any): void;
    handleKeyDown(e: any): void;
    handleMouseUp(e: any): void;
    focus(): void;
    blur(): void;
}, {
    methods: {
        setState(state: {}, callback: any): void;
        __emit(...args: any[]): void;
    };
}, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls: string;
    disabled: boolean;
    autofocus: boolean;
    defaultChecked: boolean;
} & {
    tabindex?: string | number;
    loadingIcon?: any;
    checked?: boolean;
    checkedChildren?: any;
    unCheckedChildren?: any;
}>, {
    prefixCls: string;
    disabled: boolean;
    autofocus: boolean;
    defaultChecked: boolean;
}>;
export default _default;
